The code in computer programs is made of statements. Statements are the instructions for the computer to follow. Real programs can contain thousands of statements.

DATA TYPES

- Strings: text
- Integers: whole numbers without a decimal point. Negative, positive or zero.
- Float: numbers with decimal places, they can be positive or negative.


STRINGS

In Python, both single ' and double " quotes can be used to define strings. 
It doesn’t make a difference whether you choose double or single quotation marks, but they do need to match.

Anything in quotation marks will be treated as a string, even numbers.

movie = "Gladiator"
book = "1984"

CONCATENATION

When you use the + addition operator with string values the two strings are joined together. 

This is known as concatenation.

#Displays IronMan
print("Iron" + "Man")

#Displays basketball
a = "basket"
b = "ball"
print(a+b)

NUMERICAL DATA

Numerical data shouldn't be in quotation marks. The line of code below declares a numerical variable

price = 10

You can perform math operations with numbers. Each print() instruction will add a value to the screen in a new line.

print(7 + 3)

The computer reads and executes instructions line by line, from top to bottom. 
The execution of the program will be interrupted at the first error encountered.


PRINT

The print() instruction is the easiest way to send a message to the screen or other display device.

print("Hello world.")

Numbers don't require quotation marks.

print(42)

VARIABLE

Computer programs use variables to store important information, like items in a shopping cart, prices and discounts.

The line of code below tells the computer to store information in a variable called item.

This is called "declaring a variable".

Spaces are not allowed in variable names in Python. Asterisks (*) aren't either.

item = "bike"
name_of_variable = "value"

A variable name can contain numbers but cannot start with a number.

Variables have a name and a value. They are connected with the equal sign =.

A variable’s name is used to identify where that information is stored. You can access the value that a variable is storing by calling its name.

budget = 200
print(budget)

budget = 20
print(budget + 10)

price = 5
amount = 3
total = price * amount

You can update the value stored in a variable. The variable will forget the previously stored value.
Updating the value of a variable is called reassigning a variable.

price = 99
price = 100
print(price)

COMMENTS

Professional developers use comments to add descriptions and explanations to their programs.

You can add comments to your Python code with the hash symbol #

#Displaying a message
print("Insufficient funds")

You can use comments to temporarily disable a statement. This way the computer will skip the instruction.

CASE-SENSITIVE

Python is a case-sensitive language, meaning "A" and "a" are treated as different.

credit = 300
Credit = 280
CREDIT = 320

SNAKE CASE

Snake case is a popular way to create variable names in a consistent way. 
Snake case uses underscores _ to separate words in a variable name.

name_username = "John Doe"

Snake case is the best practice for naming variables in Python.

INPUT

An input is any information that goes into a computer.

The press of a key and the click of a button are examples of inputs.

The input() instruction is the easiest way to allow a user to insert a value into your program.

#Display a window that asks you to write an input
#message's value will be whatever you write in that window
message = input()
print(message)

#Ask user for their age
age = input()

OUTPUT

An output is a way for the computer to communicate with the outside world. 
A message displayed on the screen and the sound from a speaker are examples of outputs.

The print() instruction, which you already know, is the easiest way to get your computer program to generate an output.


