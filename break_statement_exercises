Exercise: "Search and Display Contact Information"

You are given a list of books, where each book is represented by a tuple containing the title and the number of pages. 
Complete the program to take a string as input, search for the title in the list of books, and output the number of pages of 
the corresponding book in the format presented below. If the title is not found, print a message indicating that the book is not in the list.

Sample Input:
"The Great Gatsby"

Sample Output:
"The Great Gatsby is 180 pages"

books = [
('To Kill a Mockingbird', 281),
('1984', 328),
('The Catcher in the Rye', 224),
('The Great Gatsby', 180),
('Brave New World', 311)
]

Instructions:

1. Create a program that takes a string input for a book title.
2. Use a loop to search for the given title in the list of books.
3. If the title is found, print the title and the corresponding number of pages in the specified format.
4. If the title is not found, print a message indicating that the book is not in the list.
5. Use the break statement to exit the loop once the title is found.
6. Feel free to modify the list of books for more testing scenarios.

books = [
('To Kill a Mockingbird', 281),
('1984', 328),
('The Catcher in the Rye', 224),
('The Great Gatsby', 180),
('Brave New World', 311)
]

book_title= input("What's the book title? ")

for book in books:
  if book[0] == book_title:
    print(book_title, "is", book[1], "pages")
    break #breaks the loop the moment the title is found
  else:
    print("The book is not in the list")


In the context of the loop, book represents an individual element from the books list during each iteration. When you use for book in books:, 
book is a variable that takes on the value of each element in the books list one at a time.

So, when you access book[0], you are accessing the first element (title) of the current tuple (book) in the loop iteration. 
On the other hand, if you were to use books[0], you would be accessing the first element of the entire books list, which is not what you want inside the loop.

In summary, book[0] refers to the title of the current book being processed in the loop, while books[0] would refer to the first element in 
the entire list of books (which is not what you want inside the loop iterating over each book).

---

Exercise: "Guess the Number"

Write a Python program that generates a random number between 1 and 20 and allows the user to guess the number. 
The program should provide feedback on whether the guessed number is too high, too low, or correct. 
Use a loop to allow the user to guess until they correctly identify the random number. 
Introduce a limit of 5 attempts. 
If the user doesn't guess the correct number within the limit, end the loop and display a message indicating the correct answer.

import sys

from random import randrange

correct_number = randrange(21) #Generates a random integer between 0-20

def guessing_number():
  guess = int(input("Guess a number between 0 and 20: "))
  if guess < 0 or guess > 20:
    print("The number must be between 0 and 20.")
    sys.exit() # Added an exit statement to end the program if the input is out of range
  return guess

attempts = 0
win = False

def number_guesser():
    global attempts, win  # Use global to modify the variables from the outer scope
    while attempts < 5:
        guess = guessing_number()  # Get the guess from the guessing_number function
        if guess > correct_number:
            print("The correct number is smaller.")
        elif guess < correct_number:
            print("The correct number is bigger.")
        else:
            print("Congratulations, that's the right number!")
            attempts = 5
            win = True
            break #Ends the loop
        attempts = attempts + 1
        print("Try again")
        
number_guesser()
  
if attempts == 5 and not win:
  print("Game over")
