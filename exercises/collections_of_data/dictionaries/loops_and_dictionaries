# Displays the keys, not the values:

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}
for i in myDictionary:
  print(i)

# Displays the values, not the keys

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}
for i in myDictionary:
  print(myDictionary[i], end="")

VALUES() METHOD

# This loop uses the .values() method, which can be run on a data type. We still only get the value, and not the key.

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}
for value in myDictionary.values():
  print(value)

ITEMS() METHOD

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}

for name,value in myDictionary.items():
  print(f"{name}:{value}")

# Note: "name" and "value" and conventions. They can be replaced for other variable names (e.g. i and j) so long as you also replace them on the 'for' loop declaration

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}

for i,j in myDictionary.items():
  print(f"{i}:{j}")

ITEM() METHOD + IF STATEMENT

myDictionary = {"name" : "Ian", "health": 219, "strength": 199, "equipped": "Axe"}

for name,value in myDictionary.items():
  print(f"{name}:{value}")
  if (name == "strength"):
    print("Whoa, SO STRONG!")

# Nested if statements:

myDictionary = {"name" : "David the Mildy Terrifying", "health": 186, "strength": 4, "equipped":"l33t haxx0r p0werz"}
for name,value in myDictionary.items():
  print(f"{name}:{value}")
  if (name == "strength"):
    if value > 100:
      print("Whoa, SO STRONG")
    else:
      print("Looks like you skipped leg day, arm day, chest day and, well, gym day entirely bro!")



