import random

user_inputed = ""

def file_reader():
  with open("login_information", "r") as file:
    password_list = file.read()
  return password_list

def file_writer():
  with open("login_information", "w") as file:
    file.write(password_list)

def username_exists():
  global user
  password_list = file_reader()
  while True:
    if user in password_list:
      user = input("This username is already taken. Choose another username: ")
    else:
      break

def sign_up():
  user = input("Choose an username: ")
  username_exists()

  password = input("Choose an password: ")
  salt = random.randint(1, 99999) # Generates random salt
  password = f"{password}{salt}" # Add salt to password
  password = hash(password) # Hash the password

  password_list = file_reader()
  password_list[user] = {"password":password, "salt":salt} # Adds password and salt to dictionary with user key

  file_writer() # Rewrites file with update password_list

def username_checker():

  password_list = file_reader()

  while True: # Checks if the username is in the dictionary
    user_inputed = input("Input the username: ")
    if user_inputed not in password_list:
      print("User not found. Try again.")
    else: 
      break

def password_checker():

  attempts = 0

  while True:
    password_inputed = input("Input the password: ")
    password_inputed = f"{password_inputed}{password_list[user_inputed]['salt']}" # Adds salt to the password inputed
    if hash(password_inputed) == password_list[user_inputed]["password"]: # Compares hashed password+salt with value in dictionary
     print("Access granted!")
     break
    else:
     if attempts == 3:
      print("Too many failed attempts. Access denied.")
      break
     else:
      print("Wrong password. Try again.")
      attempts += 1

def menu():
  while True:
    choice = input("Choose an option: \n 1 Sign up \n 2 Log in \n 1/2: ").strip()
    if choice == "1":
      sign_up()
      break
    if choice == "2":
      username_checker()
      password_checker()
      break

menu()
