list = ["Item 1", 1, True]

list[0] # Indexing

print(list[2])

list[0] = "Item 2" # Changes value with the index 0 for "Item 2"

---

for i in range (0, 3):
  print(list[i])

Alternatively,

for item in list:
  print(item)

---

colors = ["Red", "Orange", "Yellow", "Green", "Blue", "Violet"]
print(f"The first color is {colors[0]}")

---

import random

greeting = ["Hola", "Hello", "Konichiwa", "Salut", "Nihao"]
print(f"{greeting[random.randint(0, 4)]}!")

---

name = "Sarah"
age = 34
country = "Germany"
info = [name, age, country]

---

# Slicing

shopping_list = ["Eggs", "Oat milk", "Tea"]

shopping_list[0:2] # Display first two values

shopping_list[-1] # Display Tea

len(shopping_list)

shopping_list.append("Honey")

shopping_list.insert(1, "Cereal")

shopping_list.pop(1) # Removes value with index 1

shopping_list.remove("Eggs")

---

blank_list = [] # Creates empty list

---

agenda = []

while True:
  menu = input("Add or remove?: ").lower()
  if menu == "add":
    item = input("What's next on the agenda?: ")
    agenda.append(item) 
  elif menu == "remove":
    item = input("What would you like to remove?: ")
    if item in agenda:
        agenda.remove(item)
    else:
        print(f"{item} was not in the list")
  else:
    print("Invalid value. Try again.")
  print(agenda)

---

# Unpacking list

numbers = [1, 2, 3]
a, b, c = numbers 
# Declares three variables, each with a value equal to one of the items of the list. 
# The number of variables must be equal to the number or values or we'll get a ValueError error

---

# List comprehension

#List comprehensions are a way to create lists based on a specific rule or pattern. 

nums = [i*2 for i in range(10)] # A list of even numbers between 0 and 18

cubed_evens=[i**2 for i in range(10) if i**3 % 2 == 0]  # A list of squares that are even

word = str(input())
# Removes vowels from word
not_vowels = [i for i in word if i != "a" and i != "e" and i != "i" and i != "o" and i != "u"]
print(not_vowels)
